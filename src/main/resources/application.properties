# ========== MySQL Configuration ==========
spring.datasource.url=jdbc:mysql://localhost:3307/Booking
spring.datasource.username=banbann
spring.datasource.password=banbann
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# ========== JPA / Hibernate Configuration ==========
spring.jpa.hibernate.ddlc
-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ========== Redis Configuration ==========
spring.data.redis.host=localhost
spring.data.redis.port=6379

# Enable Redis as the cache type
spring.cache.type=redis

# Global default TTL for any cache not explicitly defined (e.g., 1 minute)
spring.cache.redis.time-to-live.default=60000

# Specific TTLs for your named caches (in milliseconds)
spring.cache.redis.time-to-live.countries=3600000       # 1 hour for 'countries' cache
spring.cache.redis.time-to-live.packages=300000         # 5 minutes for 'packages' cache

# Optional: Add a key prefix to avoid conflicts if Redis is shared
spring.cache.redis.use-key-prefix=true
spring.cache.redis.key-prefix=booking_app:cache:

# ========== (Optional) Server Port ==========
# server.port=8080

# Logging configuration
logging.config=classpath:logback-spring.xml

# Application name for Graylog identification
spring.application.name=booking-service

# Optional: Logging levels
logging.level.com.booking=DEBUG
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN


# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=booking-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.kafka.event
